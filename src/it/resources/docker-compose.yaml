version: '3.9'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: "no"
    hostname: mysql
    ports:
      - "${MYSQL_EXPOSED_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  beaver:
    image: dbeaver/cloudbeaver:latest
    container_name: beaver
    restart: "no"
    hostname: beaver
    ports:
      - "${BEAVER_EXPOSED_PORT}:8978"
    depends_on:
      - mysql
    volumes:
      - ${STORAGE}/beaver_data:/opt/cloudbeaver/workspace

#  wiremock:
#    image: wiremock/wiremock:latest
#    container_name: wiremock
#    restart: "no"
#    hostname: wiremock
#    ports:
#      - "${WIREMOCK_EXPOSED_PORT}:8443"
#    command: ["--port", "8443"]

  wiremock-gui:
    image: "holomekc/wiremock-gui:latest"
    container_name: wiremock-gui
    ports:
      - "${WIREMOCK_EXPOSED_PORT}:8443"
    environment:
      WIREMOCK_OPTIONS: "--port=8443,--max-request-journal=1000,--local-response-templating,--root-dir=/home/wiremock/storage"

#networks:
#  devops_web_network:
#    external: true
#
#volumes:
#  dbeaver_data:
#    driver: local
#    driver_opts:
#      type: "none"
#      o: "bind"
#      device: "${PWD}/blackhole/beaver_data"

  dynamodb:
    image: amazon/dynamodb-local:latest
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    container_name: dynamodb
    restart: always
    hostname: dynamodb
    ports:
      - "${DYNAMO_DB_EXTERNAL_PORT}:8000"
    volumes:
      - ${STORAGE}/dynamodb:/home/dynamodblocal/data
    depends_on:
      liquibase:
        condition: service_completed_successfully

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: dynamodb_admin
    restart: always
    hostname: dynamodb-admin
    ports:
      - "${DYNAMO_DB_ADMIN_PORT}:8001"
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
      AWS_REGION: ${AWS_REGION}
#      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - dynamodb

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: postgres_admin
    hostname: postgres_admin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_LISTEN_PORT}"
    volumes:
      - ${STORAGE}/postgres_admin:/var/lib/pgadmin
    depends_on:
      - postgres

  liquibase:
    image: liquibase/liquibase:latest
    container_name: liquibase
    volumes:
      - ${MIGRATIONS}:/liquibase/changelog
      - ${STORAGE}/application:/liquibase/result
    entrypoint: "/liquibase/changelog/docker-entrypoint-extended.sh"
    command:
      - "--changeLogFile=changelog.xml"
      - '--url=jdbc:postgresql://postgres/${POSTGRES_DB}?currentSchema=public'
      - "--username=${POSTGRES_USER}"
      - "--password=${POSTGRES_PASSWORD}"
      - "update"
    depends_on:
      - postgres
